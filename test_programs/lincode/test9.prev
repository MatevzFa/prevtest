# Recursive list magic
{
    result = {
        i = 42;

        aptr = $a;

        r.c1 = { none : aptr };
        r.c4 = { none : $r };

        @(r.c3) = i

        : @((@{ none : r.c4 }).c3)
        where
            var i: int;
            typ rtype: rec(c1: ptr atype, c2: atype, c3: ptr int, c4: ptr rtype);
            var r: rtype;
            var aptr: ptr atype;
            var a: atype;
            typ atype: arr[100] int
    };

    assert(42, result)

    : 0
    where
        var result: int;
        fun assert(expected: int, actual: int): void = {
            printint([int] (expected == actual));
            println();
            if expected != actual then
                printint(actual);
                println()
            end
            : none
        };
        fun printint(i: int): void;
        fun println(): void
}
